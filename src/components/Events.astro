---

import { Debug } from 'astro:components';
interface Event {
  titulo: string;
  descripcion: string
  fecha: string
  visual: Visual
  visualAlt: string
}
interface DerivedProps {
  url: string;
  secure_url: string;
  raw_transformation: string;
}
interface Creator {
  id: string;
  type: string;
}
interface Visual {
  id: string;
  url: string;
  tags: string[];
  type: string;
  bytes: number;
  width: number;
  height: number;
  derived: DerivedProps[];
  version: number;
  duration: string | null;
  folder_id: string;
  public_id: string;
  created_at: string;
  updated_at: string;
  created_by: Creator;
  updated_by: Creator;
  asset_folder: string;
  display_name: string;
  resource_type: string;
  access_control: string[];
}

const query = {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({
    query: `
      {
        allEvents {
          titulo
          visual
          visualAlt
          descripcion
          fecha
        }
      }`,
  }),
};

const response = await fetch(import.meta.env.HYGRAPH_ENDPOINT, query);
const json = await response.json();
const allEvents: Event[] = json.data.allEvents;

---
{ allEvents  && allEvents.length > 0 &&  
( <section class="events-section">
  <h2>Próximos Eventos</h2>
  <ul>
    {
      allEvents.map((event) => (
        <li>
          <h3>{event.titulo}</h3>
          <img src={event.visual.url} alt={event.visualAlt} class="event_visual"/>
          <p>{event.fecha}</p>
          <p>{event.descripcion}</p>
        </li>
      ))
    }
    </ul>
  </section> )
  }
    <style>
      h2 {
        margin-bottom: 16px;
      }
      ul {
        list-style: none;
        padding: 0;
      }
      li {
        margin-bottom: 16px;
      }
      .events-section {
          background-color: #ffe554;
          border: 2ch solid #ffe554;
          margin-bottom: 2.5rem;
      }
      .event_visual {
        max-width: 512px;
      }
    </style>



