---
const siteKey = import.meta.env.HCAPTCHA_SITE_KEY;
---

<div class="contact-form-container">
  <form id="contactForm" class="contact-form" action="/api/contact" method="POST">
    <div class="form-group">
      <label for="name">Nombre</label>
      <input type="text" id="name" name="name" required>
    </div>

    <div class="form-group">
      <label for="email">Email</label>
      <input type="email" id="email" name="email" required>
    </div>

    <div class="form-group">
      <label for="message">Mensaje</label>
      <textarea id="message" name="message" required></textarea>
    </div>

    <div class="h-captcha" data-sitekey={siteKey}></div>

    <button type="submit">Enviar Mensaje</button>
  </form>
  <div id="formStatus"></div>
</div>

<script src="https://js.hcaptcha.com/1/api.js" async defer></script>

<script>
document.getElementById('contactForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const form = e.target;
  const formData = new FormData(form);
  const hcaptchaResponse = formData.get('h-captcha-response');

  if (!hcaptchaResponse) {
    alert('Please complete the captcha');
    return;
  }

  try {
    const response = await fetch('/api/contact', {
      method: 'POST',
      body: formData,
    });

    const result = await response.json();
    const statusDiv = document.getElementById('formStatus');

    if (response.ok) {
      statusDiv.textContent = 'Message sent successfully!';
      statusDiv.className = 'success';
      form.reset();
      hcaptcha.reset();
    } else {
      statusDiv.textContent = result.error || 'Failed to send message';
      statusDiv.className = 'error';
    }
  } catch (error) {
    console.error('Error:', error);
    document.getElementById('formStatus').textContent = 'An error occurred';
  }
});
</script>

<style>
.contact-form-container {
  max-width: 600px;
  margin: 0 auto;
  padding: 2rem;
}

.contact-form {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

label {
  font-weight: 600;
  color: #333;
}

input, textarea {
  padding: 0.75rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

textarea {
  min-height: 150px;
  resize: vertical;
}

button {
  background: #4f46e5;
  color: white;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: 4px;
  font-size: 1rem;
  cursor: pointer;
  transition: background-color 0.2s;
}

button:hover {
  background: #4338ca;
}

#formStatus {
  margin-top: 1rem;
  padding: 1rem;
  border-radius: 4px;
}

#formStatus.success {
  background: #dcfce7;
  color: #166534;
}

#formStatus.error {
  background: #fee2e2;
  color: #991b1b;
}
</style>
