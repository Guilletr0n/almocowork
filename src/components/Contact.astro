---
import Emailer from "../components/Emailer.tsx";
import { MailerSend, EmailParams, Sender, Recipient } from "mailersend";
import { Resend } from "resend";


const resend = new Resend(import.meta.env.RESEND_APIKEY);
let isSubmitted = false;

export async function processCaptcha(g_recaptcha_response: string) {
    const url = "https://www.google.com/recaptcha/api/siteverify";

    const requestBody = new URLSearchParams({
        secret: import.meta.env.RECAPTCHA_SECRET_KEY,
        response: g_recaptcha_response,
    });

    console.log("secret:" + import.meta.env.RECAPTCHA_SECRET_KEY);
    console.log("g_recaptcha_response:" + g_recaptcha_response);

    const response = await fetch(url, {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded",
        },
        body: requestBody.toString(),
    });

    const data = await response.json();

    console.log(data);
    /*
  {
    success: true,
    challenge_ts: '2024-01-20T18:18:12Z',
    hostname: 'localhost',
    score: 0.9,
    action: 'submit'
  }
  */

    return data.success;
}

if (Astro.request.method === "POST") {
    
    const formData = await Astro.request.formData();
    const username = formData.get("name")?.toString || "";
    const email = formData.get("email")?.toString() || "";
    const about = formData.get("about");

    const g_recaptcha_response =
        formData.get("g-recaptcha-response")?.toString() || "";
    const is_valid_captcha = await processCaptcha(g_recaptcha_response);

    if (!is_valid_captcha) {
        console.error("invalid captcha");
    } else {
        console.log("valid captcha");
    }
    const sendForm = await resend.emails.send({
        from: "Web Coworking <info@coworkingalmonaster.site>",
        to: [
            "gonzalezdecastro.guillermo@gmail.com",
            // "juanjovazquezlimon@gmail.com",
        ],
        //to: 'gonzalezdecastro.guillermo@gmail.com',
        subject: "Formulario Coworking Almonaster",
        html: `<p>Nombre: ${username}</p><p>Email: ${email}</p><p>Mensaje: ${about}</p>`,
    });
    if (sendForm.data) {
        console.log("Email sent");
        isSubmitted = true;
    } else {
        console.log("Email not sent");
    }
}

/*
if (Astro.request.method === "POST") {
    try {
        const data = await Astro.request.formData();
        const name = data.get("name");
        const email = data.get("email");
        const hCaptchaToken = data.get("h-captcha-response");
        console.log(hCaptchaToken);
        const requestBody = {
            secret: import.meta.env.HCAPTCHA_SECRET,
            response: hCaptchaToken,
        };
        console.log(requestBody);
        fetch("https://api.hcaptcha.com/siteverify", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
            },
            body: JSON.stringify(requestBody),
        }).then(async (response) => {
            const data = await response.json();
            console.log(data);
            if (data.success) {
                //await sendEmail(name, email, phone, about);
            }
            console.log(data);
        });
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
}
//site-key="4cca2472-064e-4944-ae54-fca0dcd455ca"

if (Astro.request.method === "POST") {
    try {
        const data = await Astro.request.formData();
        const name = data.get("name");
        const email = data.get("email");
        const phone = data.get("phone");
        const about = data.get("about");
        const hCaptchaToken = data.get("h-captcha-response");
      
        const requestBody = new URLSearchParams({
            secret: import.meta.env.HCAPTCHA_SECRET,
            response: hCaptchaToken,
        })
        
        fetch("https://api.hcaptcha.com/siteverify", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
            },
            body: requestBody.toString()
        }).then(async (response) => {
            const data = await response.json();
            console.log(data);
            if (data.success) {
                //await sendEmail(name, email, phone, about);
            }
            console.log(data);
        });
        
        if (phone && phone.toString.length > 1) return;

        
        const sendStaff = await resend.emails.send({
            from: "Web Coworking <info@coworkingalmonaster.site>",
            to: [
                "gonzalezdecastro.guillermo@gmail.com",
                // "juanjovazquezlimon@gmail.com",
            ],
            //to: 'gonzalezdecastro.guillermo@gmail.com',
            subject: "Formulario Coworking Almonaster",
            html: `<p>Nombre: ${name}</p><p>Email: ${email}</p><p>Mensaje: ${about}</p>`,
        });

        // const send = await resend.emails.send({
        //     from: "From Name <info@coworkingalmonaster.site>",
        //     to: "gonzalezdecastro.guillermo@gmail.com",
        //     subject: "Coworking Almonaster",
        //     html: `<p>Hi ${name},</p><p>Hemos recibido tu mensaje.</p>`,
        // });

        if (sendStaff.data) {
            console.log("Email sent");
        } else {
            console.log("Email not sent");
        }
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
}
var onSuccess = function (response:string) {
    console.log("¡Éxito del desafío!"+response)
};
*/
---

<style>
    .container {
        display: flex;
        flex-direction: column;
        gap: 0;
        form {
            width: 60%;
        }
        .col-2 {
            width: 40%;
        }
    }
    form {
        margin: 48px 0;
    }
    .form-field {
        position: relative;
        margin-bottom: 32px;
        display: block;
        width: 100%;
    }
    .phone {
        height: 3px;
        input,
        label {
            color: #fefefe;
        }
    }
    .honey {
        color: #fefefe;
        border-color: #fefefe;
        position: absolute;
        left: -1000px;
    }
    label {
        font-size: 13px;
        top: -24px;
        position: absolute;
    }
    textarea,
    input {
        border: none;
        border-bottom: 2px solid black;
        width: 100%;
        background-color: transparent;
    }
    textarea {
        width: 100%;
        background-color: none;
    }
    .btn_submit {
        background-color: black;
        color: white;
        padding: 12px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-weight: bold;
        width: 200px;
        height: 50px;
    }
</style>
<div class="container">
    
    {!isSubmitted &&(<form method="POST">
        <div class="form-field">
            <label> Nombre </label>
            <input type="text" name="name" />
        </div>
        <div class="form-field">
            <label> Email </label>
            <input type="email" name="email" />
        </div>
        <div class="form-field">
            <label> Cuéntanos algo sobre tu proyecto: </label>
            <textarea style="resize: none;" name="about"></textarea>
        </div>
        <input
            type="submit"
            class="btn_submit"
            data-sitekey={import.meta.env.RECAPTCHA_SITE_KEY}
            data-callback="recaptcha"
            data-action="submit"
            value="Enviar"
        />
    </form>)}
    {isSubmitted &&(
        <p>Gracias por tu mensaje! Pronto nos pondremos en contacto contigo.</p>
    )}

</div>

<script
    is:inline
    src="https://www.google.com/recaptcha/api.js?render=6Lfabl8qAAAAAGCpA6vitVqvWfQ_rA7jW4EQSbYi"
></script>
<script is:inline>
    function recaptcha() {
        document.querySelector("form").submit();
    }
</script>
